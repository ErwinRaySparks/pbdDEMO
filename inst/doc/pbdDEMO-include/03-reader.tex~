\section{Generating and Reading Data}
\label{sec:reader}
\addcontentsline{toc}{section}{\thesection. Generating and Reading Data}



\subsection{SPMD to DMAT}
\label{sec:spmd2dmat}
\addcontentsline{toc}{subsection}{\thesubsection. SPMD to DMAT}

\pkg{pbdDEMO} also provides reader examples
\begin{Command}
### At the shell prompt, run the demo with 2 processors by
### (Use Rscript.exe for windows system)
mpiexec -np 2 Rscript -e "demo(spmd2dmat,'pbdDEMO',ask=F,echo=F)"
\end{Command}




\subsection{csv File}
\label{sec:csv_files}
\addcontentsline{toc}{subsection}{\thesubsection. csv File}

It is simple enough to read in a csv file serially and then distribute the data out to the other processors.



However, this is inefficient, especially if the user has access to a parallel file system.  In this case, several processes should be used to read parts of the file, and then distribute that data out to the larger process grid.  


\subsection{SQL Databases}
\label{sec:sql_db}
\addcontentsline{toc}{subsection}{\thesubsection. SQL Databases}
